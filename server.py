from flask import Flask, request, jsonify
import os
import json
import sqlite3
from datetime import datetime

app = Flask(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DATABASE = 'services.db'

def init_db():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü"""
    conn = sqlite3.connect(DATABASE)
    cursor = conn.cursor()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —É—Å–ª—É–≥
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS services (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name TEXT NOT NULL,
            description TEXT,
            price REAL,
            category TEXT,
            image_url TEXT,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∑–∞–∫–∞–∑–æ–≤
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS orders (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            customer_name TEXT NOT NULL,
            customer_phone TEXT NOT NULL,
            customer_email TEXT,
            service_id INTEGER NOT NULL,
            message TEXT,
            status TEXT DEFAULT 'new',
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (service_id) REFERENCES services (id)
        )
    ''')
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —É—Å–ª—É–≥–∏ –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞—è
    cursor.execute('SELECT COUNT(*) FROM services')
    if cursor.fetchone()[0] == 0:
        sample_services = [
            ('–£–ü–† –¥–æ—Å—Ç–∞–≤–∫–∞', '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ —Å –ø—Ä–∏–º–µ—Ä–∫–æ–π', 1000.0, 'delivery', 'üöö'),
            ('–≠—Ç–∏–∫–µ—Ç–∫–∏', '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —ç—Ç–∏–∫–µ—Ç–∫–∏ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ü–∏–∏', 150.0, 'accessories', 'üè∑Ô∏è'),
            ('–ß–∞—Å—ã —Å –ø—Ä–∏–Ω—Ç–æ–º', '–ù–∞—Å—Ç–µ–Ω–Ω—ã–µ —á–∞—Å—ã —Å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º', 900.0, 'accessories', '‚è∞'),
            ('–ü–µ—á–∞—Ç—å –Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–∞—Ö', '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –ø–µ—á–∞—Ç—å –Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–∞—Ö —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤', 500.0, 'clothing', 'üëï'),
            ('–ü–µ—á–∞—Ç—å –Ω–∞ –∫—Ä—É–∂–∫–∞—Ö', '–ü–µ—á–∞—Ç—å –Ω–∞ –∫–µ—Ä–∞–º–∏—á–µ—Å–∫–∏—Ö –∫—Ä—É–∂–∫–∞—Ö', 400.0, 'accessories', '‚òï'),
            ('–í–∏–∑–∏—Ç–∫–∏', '–ü–µ—á–∞—Ç—å –≤–∏–∑–∏—Ç–æ–∫ –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –±—É–º–∞–≥–µ', 300.0, 'polygraphy', 'üìá'),
            ('–õ–∏—Å—Ç–æ–≤–∫–∏', '–ü–µ—á–∞—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –ª–∏—Å—Ç–æ–≤–æ–∫', 200.0, 'polygraphy', 'üìÑ'),
            ('–ë—Ä–µ–Ω–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä—É—á–∫–∏', '–†—É—á–∫–∏ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º –∫–æ–º–ø–∞–Ω–∏–∏', 150.0, 'souvenirs', '‚úèÔ∏è')
        ]
        
        cursor.executemany('''
            INSERT INTO services (name, description, price, category, image_url)
            VALUES (?, ?, ?, ?, ?)
        ''', sample_services)
    
    conn.commit()
    conn.close()

def get_db_connection():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    conn = sqlite3.connect(DATABASE)
    conn.row_factory = sqlite3.Row  # –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–ª–æ–Ω–∫–∞–º –ø–æ –∏–º–µ–Ω–∏
    return conn

@app.after_request
def after_request(response):
    response.headers.add('Access-Control-Allow-Origin', '*')
    response.headers.add('Access-Control-Allow-Headers', 'Content-Type,Authorization')
    response.headers.add('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS')
    return response

# –û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—Å–ª—É–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
@app.route('/', methods=['GET'])
def get_services():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —É—Å–ª—É–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"""
    try:
        conn = get_db_connection()
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É—Å–ª—É–≥–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('''
            SELECT s.*, 
                   CASE 
                       WHEN s.category = 'clothing' THEN '–ü–µ—á–∞—Ç—å –Ω–∞ –æ–¥–µ–∂–¥–µ'
                       WHEN s.category = 'accessories' THEN '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã'
                       WHEN s.category = 'headwear' THEN '–ì–æ–ª–æ–≤–Ω—ã–µ —É–±–æ—Ä—ã'
                       WHEN s.category = 'premium' THEN '–ü—Ä–µ–º–∏—É–º'
                       WHEN s.category = 'polygraphy' THEN '–ü–æ–ª–∏–≥—Ä–∞—Ñ–∏—è'
                       WHEN s.category = 'souvenirs' THEN '–°—É–≤–µ–Ω–∏—Ä—ã'
                       WHEN s.category = 'delivery' THEN '–î–æ—Å—Ç–∞–≤–∫–∞'
                       ELSE s.category
                   END as section_title
            FROM services s
            ORDER BY s.category, s.name
        ''')
        services = cursor.fetchall()
        
        conn.close()
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç, –æ–∂–∏–¥–∞–µ–º—ã–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º
        sections = {}
        for service in services:
            category = service['category']
            if category not in sections:
                sections[category] = {
                    'section': category,
                    'title': service['section_title'],
                    'services': []
                }
            
            sections[category]['services'].append({
                'id': service['id'],
                'name': service['name'],
                'description': service['description'],
                'price': f"{int(service['price'])} ‚ÇΩ",
                'image': service['image_url'],
                'section': category
            })
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–ª–æ–≤–∞—Ä—å –≤ —Å–ø–∏—Å–æ–∫
        result = list(sections.values())
        
        return jsonify(result), 200
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã: {e}")
        return jsonify([]), 500

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π —É—Å–ª—É–≥–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
@app.route('/add-service', methods=['POST'])
def add_service():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —É—Å–ª—É–≥–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    try:
        data = request.get_json()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        if not data or not data.get('name'):
            return jsonify({'error': '–ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'}), 400
        
        conn = get_db_connection()
        cursor = conn.cursor()
        
        # –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —É—Å–ª—É–≥—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('''
            INSERT INTO services (name, description, price, category, image_url)
            VALUES (?, ?, ?, ?, ?)
        ''', (
            data.get('name'), 
            data.get('description'), 
            data.get('price'), 
            data.get('category'),
            data.get('image_url')
        ))
        
        conn.commit()
        service_id = cursor.lastrowid
        conn.close()
        
        return jsonify({
            'id': service_id, 
            'message': '–£—Å–ª—É–≥–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö'
        }), 201
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —É—Å–ª—É–≥–∏: {e}")
        return jsonify({'error': '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'}), 500

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —É—Å–ª—É–≥ (–ø—Ä–æ—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫)
@app.route('/services', methods=['GET'])
def get_services_list():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —É—Å–ª—É–≥ –≤ –ø—Ä–æ—Å—Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
    try:
        conn = get_db_connection()
        cursor = conn.cursor()
        
        cursor.execute('SELECT * FROM services ORDER BY name')
        services = cursor.fetchall()
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π
        services_list = []
        for service in services:
            services_list.append(dict(service))
        
        conn.close()
        return jsonify(services_list), 200
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —É—Å–ª—É–≥: {e}")
        return jsonify([]), 500

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —É—Å–ª—É–≥–∏
@app.route('/services/<int:service_id>', methods=['GET'])
def get_service(service_id):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —É—Å–ª—É–≥–∏ –ø–æ ID"""
    try:
        conn = get_db_connection()
        cursor = conn.cursor()
        
        cursor.execute('SELECT * FROM services WHERE id = ?', (service_id,))
        service = cursor.fetchone()
        
        conn.close()
        
        if service:
            return jsonify(dict(service)), 200
        else:
            return jsonify({'error': '–£—Å–ª—É–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'}), 404
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —É—Å–ª—É–≥–∏: {e}")
        return jsonify({'error': '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'}), 500

# –û–°–ù–û–í–ù–û–ô –ú–ê–†–®–†–£–¢ –î–õ–Ø –û–¢–ü–†–ê–í–ö–ò –ó–ê–ö–ê–ó–û–í
@app.route('/submit-order', methods=['POST'])
def submit_order():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    try:
        data = request.get_json()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        if not data:
            return jsonify({'error': '–î–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã'}), 400
            
        if not data.get('customer_name'):
            return jsonify({'error': '–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'}), 400
            
        if not data.get('customer_phone'):
            return jsonify({'error': '–¢–µ–ª–µ—Ñ–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'}), 400
            
        if not data.get('service_id'):
            return jsonify({'error': 'ID —É—Å–ª—É–≥–∏ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'}), 400
        
        conn = get_db_connection()
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏
        cursor.execute('SELECT id, name FROM services WHERE id = ?', (data.get('service_id'),))
        service = cursor.fetchone()
        
        if not service:
            conn.close()
            return jsonify({'error': '–£—Å–ª—É–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'}), 404
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('''
            INSERT INTO orders (customer_name, customer_phone, customer_email, service_id, message)
            VALUES (?, ?, ?, ?, ?)
        ''', (
            data.get('customer_name'), 
            data.get('customer_phone'), 
            data.get('customer_email', ''), 
            data.get('service_id'), 
            data.get('message', '')
        ))
        
        conn.commit()
        order_id = cursor.lastrowid
        conn.close()
        
        print(f"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #{order_id}: {data.get('customer_name')} - {service['name']}")
        
        return jsonify({
            'id': order_id, 
            'message': '–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω',
            'service_name': service['name']
        }), 201
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞: {e}")
        return jsonify({'error': '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'}), 500

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ (–¥–ª—è –∞–¥–º–∏–Ω–∫–∏)
@app.route('/orders', methods=['GET'])
def get_orders():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤"""
    try:
        conn = get_db_connection()
        cursor = conn.cursor()
        
        cursor.execute('''
            SELECT o.*, s.name as service_name, s.price as service_price
            FROM orders o 
            LEFT JOIN services s ON o.service_id = s.id 
            ORDER BY o.created_at DESC
        ''')
        orders = cursor.fetchall()
        
        orders_list = []
        for order in orders:
            order_dict = dict(order)
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —á—Ç–µ–Ω–∏—è
            order_dict['created_at'] = order_dict['created_at']
            orders_list.append(order_dict)
        
        conn.close()
        return jsonify(orders_list), 200
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–∫–∞–∑–æ–≤: {e}")
        return jsonify([]), 500

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–¥–ª—è –∞–¥–º–∏–Ω–∫–∏)
@app.route('/stats', methods=['GET'])
def get_stats():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –∑–∞–∫–∞–∑–∞–º"""
    try:
        conn = get_db_connection()
        cursor = conn.cursor()
        
        # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤
        cursor.execute('SELECT COUNT(*) as total_orders FROM orders')
        total_orders = cursor.fetchone()['total_orders']
        
        # –ó–∞–∫–∞–∑—ã –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
        cursor.execute('SELECT status, COUNT(*) as count FROM orders GROUP BY status')
        status_stats = {row['status']: row['count'] for row in cursor.fetchall()}
        
        # –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —É—Å–ª—É–≥–∏
        cursor.execute('''
            SELECT s.name, COUNT(o.id) as order_count 
            FROM orders o 
            JOIN services s ON o.service_id = s.id 
            GROUP BY s.name 
            ORDER BY order_count DESC 
            LIMIT 5
        ''')
        popular_services = [dict(row) for row in cursor.fetchall()]
        
        conn.close()
        
        return jsonify({
            'total_orders': total_orders,
            'status_stats': status_stats,
            'popular_services': popular_services
        }), 200
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        return jsonify({'error': '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏'}), 500

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
@app.route('/orders/<int:order_id>', methods=['PUT'])
def update_order_status(order_id):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞"""
    try:
        data = request.get_json()
        new_status = data.get('status')
        
        if not new_status:
            return jsonify({'error': '–°—Ç–∞—Ç—É—Å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'}), 400
        
        conn = get_db_connection()
        cursor = conn.cursor()
        
        cursor.execute('SELECT id FROM orders WHERE id = ?', (order_id,))
        if not cursor.fetchone():
            conn.close()
            return jsonify({'error': '–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω'}), 404
        
        cursor.execute('UPDATE orders SET status = ? WHERE id = ?', (new_status, order_id))
        
        conn.commit()
        conn.close()
        
        return jsonify({'message': '–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ'}), 200
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: {e}")
        return jsonify({'error': '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'}), 500

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —É—Å–ª—É–≥–∏
@app.route('/services/<int:service_id>', methods=['DELETE'])
def delete_service(service_id):
    """–£–¥–∞–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        conn = get_db_connection()
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏
        cursor.execute('SELECT id FROM services WHERE id = ?', (service_id,))
        if not cursor.fetchone():
            conn.close()
            return jsonify({'error': '–£—Å–ª—É–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'}), 404
        
        # –£–¥–∞–ª—è–µ–º —É—Å–ª—É–≥—É
        cursor.execute('DELETE FROM services WHERE id = ?', (service_id,))
        
        conn.commit()
        conn.close()
        
        return jsonify({'message': '–£—Å–ª—É–≥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞'}), 200
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —É—Å–ª—É–≥–∏: {e}")
        return jsonify({'error': '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'}), 500

# –†–µ–∑–µ—Ä–≤–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è —á—Ç–µ–Ω–∏—è –∏–∑ JSON —Ñ–∞–π–ª–∞ (–Ω–∞ —Å–ª—É—á–∞–π –ø—Ä–æ–±–ª–µ–º —Å –±–∞–∑–æ–π)
@app.route('/json-backup', methods=['GET'])
def get_services_from_json():
    """–†–µ–∑–µ—Ä–≤–Ω—ã–π –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è —É—Å–ª—É–≥ –∏–∑ JSON —Ñ–∞–π–ª–∞"""
    try:
        current_dir = os.path.dirname(os.path.abspath(__file__))
        json_file_path = os.path.join(current_dir, 'services-data.json')
        
        if os.path.exists(json_file_path):
            with open(json_file_path, 'r', encoding='utf-8') as file:
                data = json.load(file)
                return jsonify(data), 200
        else:
            return jsonify({'error': 'JSON —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω'}), 404
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON: {e}")
        return jsonify([]), 500

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è API
@app.route('/health', methods=['GET'])
def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ API –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        conn = get_db_connection()
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ
        cursor.execute('SELECT COUNT(*) as service_count FROM services')
        service_count = cursor.fetchone()['service_count']
        
        cursor.execute('SELECT COUNT(*) as order_count FROM orders')
        order_count = cursor.fetchone()['order_count']
        
        conn.close()
        
        return jsonify({
            'status': 'healthy',
            'database': 'connected',
            'services_count': service_count,
            'orders_count': order_count,
            'timestamp': datetime.now().isoformat()
        }), 200
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–¥–æ—Ä–æ–≤—å—è: {e}")
        return jsonify({
            'status': 'unhealthy',
            'database': 'disconnected',
            'error': str(e)
        }), 500

if __name__ == '__main__':
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    init_db()
    print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:")
    print("  GET  / - –ø–æ–ª—É—á–µ–Ω–∏–µ —É—Å–ª—É–≥ –¥–ª—è —Å–∞–π—Ç–∞")
    print("  POST /submit-order - –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞")
    print("  GET  /orders - –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ (–∞–¥–º–∏–Ω–∫–∞)")
    print("  GET  /stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–∞–¥–º–∏–Ω–∫–∞)")
    print("  GET  /health - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã API")
    
    app.run(debug=True, host='0.0.0.0', port=10000)
